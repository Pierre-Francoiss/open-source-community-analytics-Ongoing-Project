services:
  postgres:
    image: postgres:15
    container_name: community_postgres
    environment:
      POSTGRES_USER: community_user
      POSTGRES_PASSWORD: Userpass
      POSTGRES_DB: community_analytics
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
  adminer:
    image: adminer
    container_name: community_adminer
    ports:
      - "8080:8080"

  etl_github:
    build:
      context: ./src
    container_name: community_etl_github
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: community_user
      POSTGRES_PASSWORD: Userpass
      POSTGRES_DB: community_analytics
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      ETL_SCRIPT: etl_github.py

  airflow:
      image: apache/airflow:2.9.2
      container_name: community_airflow
      depends_on:
        - postgres
      environment:
        - AIRFLOW__CORE__LOAD_EXAMPLES=False
        - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
        - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://community_user:Userpass@postgres:5432/community_analytics
      ports:
        - "8081:8080"
      volumes:
        - ./src/dags:/opt/airflow/dags 
        - ./src:/opt/airflow/src        
      command: standalone

  streamlit:
    build:
      context: ./src
    container_name: community_streamlit
    depends_on:
      - etl_github
    environment:
      POSTGRES_USER: community_user
      POSTGRES_PASSWORD: Userpass
      POSTGRES_DB: community_analytics
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "8501:8501"
    command: ["streamlit", "run", "app_streamlit.py", "--server.port=8501", "--server.address=0.0.0.0"]

  
volumes:
  pgdata: {}